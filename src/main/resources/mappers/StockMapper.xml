<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.holden.wxproject.mapper.StockMapper">
    <select id="getSingleStock" resultType="java.util.Map">
        select *
        from df_stock
        where 1 = 1
        and code = #{code}
        <choose>
            <when test="dateType == 1">
                and substr(ds,1,4)=#{value}
            </when>
            <when test="dateType == 2">
                and substr(ds,1,7)=#{value}
            </when>
            <when test="dateType == 3">
                and ds=#{value}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="getStockCode" resultType="java.lang.String">
        select distinct code
        from df_a_stock_detail
        where 1 = 1
          and ds = #{date}
          and board in (2, 6)
    </select>

    <select id="getIndustryReport" resultType="java.util.Map">
        SELECT *
        FROM `df_a_stock_industry_report`
        where 1 = 1
          and ds = #{date}
    </select>

    <select id="getContiniation" resultType="java.util.Map">
        SELECT `code`, sumrate, `times`
        FROM `stock_continuation_up`
        where 1 = 1
          and times >= #{times}
          and tag = #{tag}
        order by sumrate desc;
    </select>

    <select id="getContiniationFinance" resultType="java.util.Map">
        SELECT `code`, sumprice, `times`
        FROM `finance_continuation_up`
        where 1 = 1
          and times >= #{times}
          and tag = #{tag}
        order by sumprice desc;
    </select>

    <select id="judgeNews" resultType="java.util.Map">
        select `code`, title
        from df_a_stock_news
        where 1 = 1
          and concat(title) REGEXP #{up}
          and code not in (
            select distinct code from df_a_stock_news where concat(title) REGEXP #{down}
            )
    </select>

    <select id="keywords" resultType="java.util.Map">
        SELECT CASE

                   WHEN 0 > weight THEN
                       '负'
                   ELSE '正'
                   END            as tag,
               GROUP_CONCAT(name) as content
        FROM `stock_key_word`
        GROUP BY CASE

                     WHEN 0 > weight THEN
                         '负'
                     ELSE '正'
                     END
    </select>

    <select id="sotckHot" resultType="java.util.Map">
        SELECT `code`,
               comment_hot,
               visit_hot
        FROM df_a_stock_hot
        ORDER BY comment_hot DESC,
                 visit_hot DESC limit 20
    </select>

    <select id="targetNews" resultType="java.util.Map">
        select `code`, title
        from df_a_stock_news
        where 1 = 1
          and concat(title) REGEXP #{target}
    </select>

    <select id="targetStock" resultType="java.util.Map">
        SELECT `code`,
               `name`,
               current_price,
               up_down_rate,
               turnover_rate,
               (main_inflow + Slarge_inflow + large_inflow) AS big,
               (mid_inflow + small_inflow)                  AS small,
               deal_amount
        FROM `df_a_stock_detail`
        WHERE concat(code) REGEXP #{code}
           or concat(name) REGEXP #{name}
        ORDER BY
            ds DESC
            LIMIT 1
    </select>

    <select id="getKline" resultType="java.util.Map">
        SELECT ds,
        opening_price,
        closing_price,
        highest,
        lowest
        FROM df_stock
        WHERE 1=1 and CODE = #{code}
        <choose>
            <when test="dateType == 1">
                and substr(ds,1,4)=#{value}
            </when>
            <when test="dateType == 2">
                and substr(ds,1,7)=#{value}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        ORDER BY ds
    </select>

    <select id="getCalendar" resultType="java.util.Map">
        SELECT ds FROM `df_calendar` where Astatus=1
        <choose>
            <when test="dateType == 1">
                and substr(ds,1,4) in ${value}
            </when>
            <when test="dateType == 2">
                and substr(ds,1,7) in ${value}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        ORDER BY ds
    </select>

    <select id="getMaxMinDs" resultType="java.util.Map">
        SELECT DISTINCT substr(ds, 1, 4) AS ds,
                        max(ds)             over (
	PARTITION BY substr( ds, 1, 4 )) AS max_ds, min(ds) over (
	PARTITION BY substr( ds, 1, 4 )) AS min_ds
        FROM `df_calendar`
        WHERE Astatus = 1
          and substr(ds, 1, 4) = #{date}
    </select>

    <select id="getBigMarketStocks" resultType="java.util.Map">
        SELECT `code`
        FROM (
                 SELECT `CODE`,
                        circulation_market_v,
                        row_number() over ( ORDER BY circulation_market_v DESC ) AS market_rk, floor(count(*) over()*${ratio/100}) as nums
                 FROM df_a_stock_detail
                 WHERE ds = #{date}
                   AND circulation_market_v > 0
                   AND board IN (2, 6)
                   AND current_price > 0
             ) a
        where nums >= market_rk;


    </select>
</mapper>